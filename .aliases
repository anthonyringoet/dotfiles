#!/usr/bin/env bash

# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"

# Shortcuts
alias dl="cd ~/Downloads"
alias desk="cd ~/Desktop"
alias w="cd ~/workspace"
alias notes=' cd ~/Library/Mobile\ Documents/com~apple~CloudDocs/notes'
alias g="git"
alias pwdcp='pwd | pbcopy'
alias k=kubectl

alias gitpulls='find . -type d -maxdepth 1 -exec bash -c "echo '{}' && cd '{}' && git pull origin HEAD" \;'

# https://remysharp.com/2018/08/23/cli-improved
alias cat='bat'
alias ping='prettyping --nolegend'

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
	export LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
else # macOS `ls`
	colorflag="-G"
	export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, excluding . and ..
alias la="ls -lAF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"
alias ll="ls -al"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Get week number
alias week='date +%V'

# Get macOS Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
alias update='sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update; sudo gem cleanup'

# Google Chrome
alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
alias canary='/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary'

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Show active network interfaces
alias ifactive="ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"

# macOS has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# macOS has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# JavaScriptCore REPL
jscbin="/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc";
[ -e "${jscbin}" ] && alias jsc="${jscbin}";
unset jscbin;

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Merge PDF files, preserving hyperlinks
# Usage: `mergepdf input{1,2,3}.pdf`
alias mergepdf='gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=_merged.pdf'

# Disable Spotlight
alias spotoff="sudo mdutil -a -i off"
# Enable Spotlight
alias spoton="sudo mdutil -a -i on"

# PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
alias plistbuddy="/usr/libexec/PlistBuddy"

# Airport CLI alias
alias airport='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport'

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
	alias "${method}"="lwp-request -m '${method}'"
done

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume output volume 100'"

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec ${SHELL} -l"

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# docker ssh
# example usage: `dssh webapp_1`
dssh() {
  docker exec -it "$1" /bin/sh
}

# git aliases
#################

# pretty git log
# http://tjholowaychuk.com/post/26904939933/git-extras-introduction-screencast
alias glog="git log --format='%Cgreen%h%Creset %C(cyan)%an%Creset - %s' --graph"

alias st='git status -s'
alias add='git add .'
alias com='git commit -m '
alias amend='git commit --amend'
alias gp='git push origin '
alias poh='git push origin HEAD'
alias reset='git reset --hard'
alias branch='git branch | grep \* | cut -c 3-'
alias getbranch='branch | pbcopy'
alias subup='git submodule sync --recursive && git submodule update --init --recursive'
# alias subpull='git submodule foreach git pull origin master'
alias gitsub='echo ‘**************************’; git fetch --tags; git branch; git pull; git submodule sync --recursive; git submodule update --init --recursive; git status; echo'

# updatethis() {
# 	#echo '**************************'; git fetch --tags; git checkout develop; git branch; git pull; git submodule init; git submodule update --recursive; git submodule foreach git pull origin HEAD; git status; echo
# 	echo '**************************'; git fetch --tags; git branch; git pull; git submodule sync --recursive; git submodule update --init --recursive; git status; echo
# }

# updateall() {
# 	#for dir in `find .  -type d -depth 1`; do echo '**************************';builtin cd $dir; echo -e '\033[0;32m'`pwd`'\033[0m'; git fetch --tags; git checkout develop; git branch; git pull; git submodule init; git submodule update --recursive; git submodule foreach git pull origin HEAD; git status; builtin cd ..; echo; echo; echo; done
# 	for dir in `find .  -type d -depth 1`; do echo '**************************';builtin cd $dir; echo -e '\033[0;32m'`pwd`'\033[0m'; git fetch --tags; git checkout develop; git branch; git pull origin HEAD; git submodule sync --recursive; git submodule update --init --recursive; git status; builtin cd ..; echo; echo; echo; done
# }# docker ssh
# example usage: `dssh webapp_1`
dssh() {
  docker exec -it "$1" /bin/sh
}

# git aliases
#################

# pretty git log
# http://tjholowaychuk.com/post/26904939933/git-extras-introduction-screencast
alias glog="git log --format='%Cgreen%h%Creset %C(cyan)%an%Creset - %s' --graph"

alias st='git status -s'
alias add='git add .'
alias com='git commit -m '
alias amend='git commit --amend'
alias gp='git push origin '
alias poh='git push origin HEAD'
alias reset='git reset --hard'
alias branch='git branch | grep \* | cut -c 3-'
alias getbranch='branch | pbcopy'
alias subup='git submodule sync --recursive && git submodule update --init --recursive'
# alias subpull='git submodule foreach git pull origin master'
alias gitsub='echo ‘**************************’; git fetch --tags; git branch; git pull; git submodule sync --recursive; git submodule update --init --recursive; git status; echo'

# updatethis() {
# 	#echo '**************************'; git fetch --tags; git checkout develop; git branch; git pull; git submodule init; git submodule update --recursive; git submodule foreach git pull origin HEAD; git status; echo
# 	echo '**************************'; git fetch --tags; git branch; git pull; git submodule sync --recursive; git submodule update --init --recursive; git status; echo
# }

# updateall() {
# 	#for dir in `find .  -type d -depth 1`; do echo '**************************';builtin cd $dir; echo -e '\033[0;32m'`pwd`'\033[0m'; git fetch --tags; git checkout develop; git branch; git pull; git submodule init; git submodule update --recursive; git submodule foreach git pull origin HEAD; git status; builtin cd ..; echo; echo; echo; done
# 	for dir in `find .  -type d -depth 1`; do echo '**************************';builtin cd $dir; echo -e '\033[0;32m'`pwd`'\033[0m'; git fetch --tags; git checkout develop; git branch; git pull origin HEAD; git submodule sync --recursive; git submodule update --init --recursive; git status; builtin cd ..; echo; echo; echo; done
# }# docker ssh
# example usage: `dssh webapp_1`
dssh() {
  docker exec -it "$1" /bin/sh
}

# git aliases
#################

# pretty git log
# http://tjholowaychuk.com/post/26904939933/git-extras-introduction-screencast
alias glog="git log --format='%Cgreen%h%Creset %C(cyan)%an%Creset - %s' --graph"

alias st='git status -s'
alias add='git add .'
alias com='git commit -m '
alias amend='git commit --amend'
alias gp='git push origin '
alias poh='git push origin HEAD'
alias reset='git reset --hard'
alias branch='git branch | grep \* | cut -c 3-'
alias getbranch='branch | pbcopy'
alias subup='git submodule sync --recursive && git submodule update --init --recursive'
# alias subpull='git submodule foreach git pull origin master'
alias gitsub='echo ‘**************************’; git fetch --tags; git branch; git pull; git submodule sync --recursive; git submodule update --init --recursive; git status; echo'

# updatethis() {
# 	#echo '**************************'; git fetch --tags; git checkout develop; git branch; git pull; git submodule init; git submodule update --recursive; git submodule foreach git pull origin HEAD; git status; echo
# 	echo '**************************'; git fetch --tags; git branch; git pull; git submodule sync --recursive; git submodule update --init --recursive; git status; echo
# }

# updateall() {
# 	#for dir in `find .  -type d -depth 1`; do echo '**************************';builtin cd $dir; echo -e '\033[0;32m'`pwd`'\033[0m'; git fetch --tags; git checkout develop; git branch; git pull; git submodule init; git submodule update --recursive; git submodule foreach git pull origin HEAD; git status; builtin cd ..; echo; echo; echo; done
# 	for dir in `find .  -type d -depth 1`; do echo '**************************';builtin cd $dir; echo -e '\033[0;32m'`pwd`'\033[0m'; git fetch --tags; git checkout develop; git branch; git pull origin HEAD; git submodule sync --recursive; git submodule update --init --recursive; git status; builtin cd ..; echo; echo; echo; done
# }

# docker compose
#################

# Usage:
##########
# dcu            : docker-compose up -d
# dcd            : docker-compose down -v
# dex <container>: execute a bash shell inside the RUNNING <container>
# di <container> : docker inspect <container>
# dim            : docker images
# dip            : IP addresses of all running containers
# dl <container> : docker logs -f <container>
# dnames         : names of all running containers
# dps            : docker ps
# dpsa           : docker ps -a
# drmc           : remove all exited containers
# drmid          : remove all dangling images
# drun <image>   : execute a bash shell in NEW container from <image>
# dsr <container>: stop then remove <container>

function dnames-fn {
	for ID in `docker ps | awk '{print $1}' | grep -v 'CONTAINER'`
	do
    	docker inspect $ID | grep Name | head -1 | awk '{print $2}' | sed 's/,//g' | sed 's%/%%g' | sed 's/"//g'
	done
}

function dip-fn {
	echo "IP addresses of all named running containers"

	for DOC in `dnames-fn`
	do
  		IP=`docker inspect $DOC | grep -m3 IPAddress | cut -d '"' -f 4 | tr -d "\n"`
  		echo $DOC : $IP
	done
}

function dex-fn {
	docker exec -it $1 /bin/bash
}

function di-fn {
	docker inspect $1
}

function dl-fn {
	docker logs -f $1
}

function drun-fn {
	docker run -it $1 /bin/bash
}

function dsr-fn {
	docker stop $1;docker rm $1
}

alias dc="docker-compose"
alias dcu="docker-compose up --remove-orphans"
alias dcd="docker-compose down -v"
# alias dex="dex-fn"
# alias di="di-fn"
# alias dim="docker images"
# alias dip="dip-fn"
# alias dl="dl-fn"
# alias dnames="dnames-fn"
# alias dps="docker ps"
# alias dpsa="docker ps -a"
# alias drmc="docker rm $(docker ps --all -q -f status=exited)"
# alias drmid="docker rmi $( docker images -q -f dangling=true)"
# alias drun="drun-fn"
# alias dsr="dsr-fn"
# alias dstopall="docker kill $(docker ps -q)"